%2F%2F%0A%2F%2F%20Created%20by%20Sirui%20Lu%20on%202019-03-15.%0A%2F%2F%0A%0A%23include%20%3Cllvm%2FTransforms%2FAccMut%2FRenamePass.h%3E%0A%23include%20%3Cllvm%2FTransforms%2FAccMut%2FprintIR.h%3E%0A%23include%20%3Cllvm%2FSupport%2Fraw_ostream.h%3E%0A%23include%20%3Cllvm%2FIR%2FTypeFinder.h%3E%0A%23include%20%3Cstack%3E%0A%23include%20%3Cset%3E%0A%23include%20%3Cllvm%2FIR%2FOperator.h%3E%0A%23include%20%3Cllvm%2FIR%2FInstrTypes.h%3E%0A%23include%20%3Cllvm%2FIR%2FInstructions.h%3E%0A%23include%20%3Cllvm%2FIR%2FIRBuilder.h%3E%0A%23include%20%3Cllvm%2FIR%2FVerifier.h%3E%0A%23include%20%3Cunistd.h%3E%0A%0A%23ifdef%20__APPLE__%0A%23define%20FILE_STRUCT%20%22struct.__sFILE%22%0A%23endif%0A%0A%23define%20NOINSTLOG%0A%0ARenamePass%3A%3ARenamePass()%20%3A%20ModulePass(ID)%20%7B%0A%7D%0A%0Abool%20RenamePass%3A%3ArunOnModule(Module%20%26M)%20%7B%0A%20%20%20%20theModule%20%3D%20%26M%3B%0A%20%20%20%20printIR(M%2C%20%22.ori.ll%22)%3B%0A%0A%20%20%20%20accmut_file_ty%20%3D%20theModule-%3EgetTypeByName(%22struct.ACCMUTV2_FILE%22)%3B%0A%20%20%20%20file_ty%20%3D%20theModule-%3EgetTypeByName(FILE_STRUCT)%3B%0A%20%20%20%20if%20(!file_ty)%20%7B%0A%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22NO%20DEFINITION%20FOR%20FILE%20FOUND%5Cn%22%3B%0A%20%20%20%20%20%20%20%20return%20false%3B%0A%20%20%20%20%7D%0A%20%20%20%20if%20(!accmut_file_ty)%20%7B%0A%20%20%20%20%20%20%20%20accmut_file_ty%20%3D%20StructType%3A%3Acreate(%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20theModule-%3EgetContext()%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7BIntegerType%3A%3Aget(theModule-%3EgetContext()%2C%2032)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20IntegerType%3A%3Aget(theModule-%3EgetContext()%2C%2032)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20file_ty%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20IntegerType%3A%3Aget(theModule-%3EgetContext()%2C%2032)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20IntegerType%3A%3Aget(theModule-%3EgetContext()%2C%2032)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22struct.ACCMUTV2_FILE%22)%3B%0A%20%20%20%20%7D%0A%20%20%20%20renameType()%3B%0A%20%20%20%20renameGlobals()%3B%0A%20%20%20%20initFunc()%3B%0A%20%20%20%20rewriteFunctions()%3B%0A%20%20%20%20rewriteGlobalInitalizers()%3B%0A%20%20%20%20renameBack()%3B%0A%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20M.getName()%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20if%20(verifyModule(M%2C%20%26(llvm%3A%3Aerrs())))%20%7B%0A%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22FATAL!!!!!!%20failed%20to%20verify%5Cn%22%3B%0A%20%20%20%20%20%20%20%20exit(-1)%3B%0A%20%20%20%20%7D%0A%20%20%20%20printIR(M%2C%20%22.new.ll%22)%3B%0A%20%20%20%20return%20true%3B%0A%7D%0A%0AType%20*RenamePass%3A%3Arename(Type%20*ty)%20%7B%0A%20%20%20%20if%20(isa%3CStructType%3E(ty))%20%7B%0A%20%20%20%20%20%20%20%20auto%20it%20%3D%20tymap.find(dyn_cast%3CStructType%3E(ty))%3B%0A%20%20%20%20%20%20%20%20if%20(it%20%3D%3D%20tymap.end())%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20ty%3B%0A%20%20%20%20%20%20%20%20return%20it-%3Esecond%3B%0A%20%20%20%20%7D%20else%20if%20(isa%3CIntegerType%3E(ty))%20%7B%0A%20%20%20%20%20%20%20%20return%20ty%3B%0A%20%20%20%20%7D%20else%20if%20(isa%3CVectorType%3E(ty))%20%7B%0A%20%20%20%20%20%20%20%20auto%20*at%20%3D%20dyn_cast%3CVectorType%3E(ty)%3B%0A%20%20%20%20%20%20%20%20return%20VectorType%3A%3Aget(rename(at-%3EgetElementType())%2C%20at-%3EgetNumElements())%3B%0A%20%20%20%20%7D%20else%20if%20(isa%3CArrayType%3E(ty))%20%7B%0A%20%20%20%20%20%20%20%20auto%20*at%20%3D%20dyn_cast%3CArrayType%3E(ty)%3B%0A%20%20%20%20%20%20%20%20return%20ArrayType%3A%3Aget(rename(at-%3EgetElementType())%2C%20at-%3EgetNumElements())%3B%0A%20%20%20%20%7D%20else%20if%20(isa%3CPointerType%3E(ty))%20%7B%0A%20%20%20%20%20%20%20%20auto%20*pt%20%3D%20dyn_cast%3CPointerType%3E(ty)%3B%0A%20%20%20%20%20%20%20%20return%20PointerType%3A%3AgetUnqual(rename(pt-%3EgetElementType()))%3B%0A%20%20%20%20%7D%20else%20if%20(isa%3CFunctionType%3E(ty))%20%7B%0A%20%20%20%20%20%20%20%20auto%20*ft%20%3D%20dyn_cast%3CFunctionType%3E(ty)%3B%0A%20%20%20%20%20%20%20%20Type%20*resultTy%20%3D%20rename(ft-%3EgetReturnType())%3B%0A%20%20%20%20%20%20%20%20std%3A%3Avector%3CType%20*%3E%20params%3B%0A%20%20%20%20%20%20%20%20for%20(Type%20*t%20%3A%20ft-%3Eparams())%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20params.push_back(rename(t))%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20FunctionType%3A%3Aget(resultTy%2C%20params%2C%20ft-%3EisVarArg())%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20return%20ty%3B%0A%20%20%20%20%7D%0A%7D%0A%0Avoid%20RenamePass%3A%3AinitSkip()%20%7B%0A%23ifdef%20__APPLE__%0A%20%20%20%20toSkip%20%3D%20%7B%22struct.__sFILE%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22struct.__sFILEX%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22struct.__sbuf%22%7D%3B%0A%23else%0A%20%20%20%20toSkip%20%3D%20%7B%22struct.__sFILE%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22struct.__sFILEX%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22struct.__sbuf%22%7D%3B%0A%23endif%0A%20%20%20%20toSkip.emplace_back(%22struct.Mutation%22)%3B%0A%20%20%20%20toSkip.emplace_back(%22struct.RegMutInfo%22)%3B%0A%7D%0A%0Avoid%20RenamePass%3A%3ArenameType()%20%7B%0A%20%20%20%20llvm%3A%3ATypeFinder%20StructTypes%2C%20ST1%3B%0A%20%20%20%20StructTypes.run(*theModule%2C%20true)%3B%0A%20%20%20%20initSkip()%3B%0A%0A%20%20%20%20tymap%5Bfile_ty%5D%20%3D%20accmut_file_ty%3B%0A%20%20%20%20for%20(auto%20*sty%20%3A%20StructTypes)%20%7B%0A%20%20%20%20%20%20%20%20if%20(std%3A%3Afind(toSkip.begin()%2C%20toSkip.end()%2C%20sty-%3EgetName())%20!%3D%20toSkip.end())%0A%20%20%20%20%20%20%20%20%20%20%20%20continue%3B%0A%20%20%20%20%20%20%20%20if%20(sty-%3EisOpaque())%0A%20%20%20%20%20%20%20%20%20%20%20%20continue%3B%0A%20%20%20%20%20%20%20%20tymap%5Bsty%5D%20%3D%20StructType%3A%3Acreate(theModule-%3EgetContext()%2C%20%22__renamed__%22%20%2B%20sty-%3EgetName().str())%3B%0A%20%20%20%20%7D%0A%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22%5Cn---%20RENAMING%20TYPES%20---%22%3B%0A%20%20%20%20for%20(auto%20*sty%20%3A%20StructTypes)%20%7B%0A%20%20%20%20%20%20%20%20if%20(std%3A%3Afind(toSkip.begin()%2C%20toSkip.end()%2C%20sty-%3EgetName())%20!%3D%20toSkip.end())%0A%20%20%20%20%20%20%20%20%20%20%20%20continue%3B%0A%20%20%20%20%20%20%20%20if%20(sty-%3EisOpaque())%0A%20%20%20%20%20%20%20%20%20%20%20%20continue%3B%0A%20%20%20%20%20%20%20%20std%3A%3Avector%3CType%20*%3E%20nsubty%3B%0A%20%20%20%20%20%20%20%20for%20(auto%20*t%20%3A%20sty-%3Eelements())%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20nsubty.push_back(rename(t))%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20auto%20*t%20%3D%20theModule-%3EgetTypeByName(%22__renamed__%22%20%2B%20sty-%3EgetName().str())%3B%0A%20%20%20%20%20%20%20%20t-%3EsetBody(nsubty)%3B%0A%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22RENAMING%5Ct%22%20%3C%3C%20*sty%20%3C%3C%20%22%5CtTO%5Ct%22%20%3C%3C%20*t%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%7D%0A%7D%0A%0Avoid%20RenamePass%3A%3AinitFunc()%20%7B%0A%20%20%20%20std%3A%3Avector%3CFunction%20*%3E%20vec%3B%0A%20%20%20%20for%20(Function%20%26F%20%3A%20*theModule)%20%7B%0A%20%20%20%20%20%20%20%20vec.push_back(%26F)%3B%0A%20%20%20%20%7D%0A%20%20%20%20for%20(auto%20%26F%20%3A%20vec)%20%7B%0A%20%20%20%20%20%20%20%20Function%20*newfunc%20%3D%20Function%3A%3ACreate(%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20dyn_cast%3CFunctionType%3E(rename(F-%3EgetFunctionType()))%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20F-%3EgetLinkage()%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22__renamed__%22%20%2B%20F-%3EgetName()%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20theModule)%3B%0A%20%20%20%20%20%20%20%20funcmap%5BF%5D%20%3D%20newfunc%3B%0A%20%20%20%20%20%20%20%20newfunc-%3EsetAttributes(F-%3EgetAttributes())%3B%0A%20%20%20%20%20%20%20%20newfunc-%3EsetCallingConv(F-%3EgetCallingConv())%3B%0A%20%20%20%20%20%20%20%20newfunc-%3EcopyAttributesFrom(F)%3B%0A%20%20%20%20%7D%0A%7D%0A%0Avoid%20RenamePass%3A%3ArenameGlobals()%20%7B%0A%20%20%20%20for%20(GlobalValue%20%26gv%20%3A%20theModule-%3Eglobals())%20%7B%0A%20%20%20%20%20%20%20%20if%20(!isa%3CGlobalVariable%3E(%26gv))%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(isa%3CFunction%3E(%26gv))%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20continue%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22Unknown%20gv%20type%3A%20%22%20%3C%3C%20gv%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20exit(-1)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20gvmap%5Bdyn_cast%3CGlobalVariable%3E(%26gv)%5D%20%3D%20nullptr%3B%0A%20%20%20%20%7D%0A%20%20%20%20for%20(auto%20%26gv%20%3A%20gvmap)%20%7B%0A%20%20%20%20%20%20%20%20auto%20origv%20%3D%20gv.first%3B%0A%20%20%20%20%20%20%20%20auto%20*type%20%3D%20dyn_cast%3CPointerType%3E(origv-%3EgetType())%3B%0A%20%20%20%20%20%20%20%20if%20(!type)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22No%20pointer%20type%3A%20%22%20%3C%3C%20origv-%3EgetType()%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20exit(-1)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20auto%20*basetype%20%3D%20type-%3EgetElementType()%3B%0A%23ifdef%20__APPLE__%0A%20%20%20%20%20%20%20%20std%3A%3Amap%3CStringRef%2C%20StringRef%3E%20stdfiles%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7B%22__stdinp%22%2C%20%20%22accmutv2_stdin%22%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7B%22__stdoutp%22%2C%20%22accmutv2_stdout%22%7D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7B%22__stderrp%22%2C%20%22accmutv2_stderr%22%7D%0A%20%20%20%20%20%20%20%20%7D%3B%0A%23else%0A%23endif%0A%20%20%20%20%20%20%20%20GlobalVariable%20*newgv%3B%0A%20%20%20%20%20%20%20%20auto%20iter%20%3D%20stdfiles.find(origv-%3EgetName())%3B%0A%20%20%20%20%20%20%20%20if%20(iter%20!%3D%20stdfiles.end())%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20newgv%20%3D%20new%20GlobalVariable(*theModule%2C%20rename(basetype)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20origv-%3EisConstant()%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20origv-%3EgetLinkage()%2C%20nullptr%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20iter-%3Esecond%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20origv%2C%20origv-%3EgetThreadLocalMode())%3B%0A%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20newgv%20%3D%20new%20GlobalVariable(*theModule%2C%20rename(basetype)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20origv-%3EisConstant()%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20origv-%3EgetLinkage()%2C%20nullptr%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%22__renamed__%22%20%2B%20origv-%3EgetName()%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20origv%2C%20origv-%3EgetThreadLocalMode())%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20newgv-%3EsetAttributes(origv-%3EgetAttributes())%3B%0A%20%20%20%20%20%20%20%20gvmap%5Borigv%5D%20%3D%20newgv%3B%0A%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22RENAMING%20GLOBAL%5Ct%22%20%3C%3C%20*origv%20%3C%3C%20%22%5CtTO%5Ct%22%20%3C%3C%20*newgv%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%7D%0A%7D%0A%0AValue%20*RenamePass%3A%3ArewriteBinaryOperator(Value%20*arg%2C%20std%3A%3Amap%3CValue%20*%2C%20Value%20*%3E%20%26valmap)%20%7B%0A%23ifndef%20NOINSTLOG%0A%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22BinaryOperator%5Cn%22%3B%0A%23endif%0A%20%20%20%20auto%20*bop%20%3D%20dyn_cast%3CBinaryOperator%3E(arg)%3B%0A%20%20%20%20auto%20*newbop%20%3D%20BinaryOperator%3A%3ACreate(bop-%3EgetOpcode()%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20rewriteValue(bop-%3EgetOperand(0)%2C%20valmap)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20rewriteValue(bop-%3EgetOperand(1)%2C%20valmap))%3B%0A%20%20%20%20if%20(bop-%3EgetOpcode()%20%3C%2011%20%7C%7C%20bop-%3EgetOpcode()%20%3E%2028)%20%7B%0A%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22Unknown%20opcode%20for%20binary%20operator%20%22%20%3C%3C%20bop-%3EgetOpcode()%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%20%20%20%20exit(-1)%3B%0A%20%20%20%20%7D%0A%20%20%20%20newbop-%3EcopyIRFlags(bop)%3B%0A%20%20%20%20return%20newbop%3B%0A%7D%3B%0A%0AValue%20*RenamePass%3A%3ArewriteBranchInst(Value%20*arg%2C%20std%3A%3Amap%3CValue%20*%2C%20Value%20*%3E%20%26valmap)%20%7B%0A%23ifndef%20NOINSTLOG%0A%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22BranchInst%5Cn%22%3B%0A%23endif%0A%20%20%20%20auto%20*binst%20%3D%20dyn_cast%3CBranchInst%3E(arg)%3B%0A%20%20%20%20if%20(binst-%3EisUnconditional())%20%7B%0A%20%20%20%20%20%20%20%20return%20BranchInst%3A%3ACreate(dyn_cast%3CBasicBlock%3E(valmap%5Bbinst-%3EgetSuccessor(0)%5D))%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20return%20BranchInst%3A%3ACreate(%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20dyn_cast%3CBasicBlock%3E(valmap%5Bbinst-%3EgetSuccessor(0)%5D)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20dyn_cast%3CBasicBlock%3E(valmap%5Bbinst-%3EgetSuccessor(1)%5D)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20rewriteValue(binst-%3EgetCondition()%2C%20valmap))%3B%0A%20%20%20%20%7D%0A%7D%3B%0A%0AValue%20*RenamePass%3A%3ArewriteCallInst(Value%20*arg%2C%20std%3A%3Amap%3CValue%20*%2C%20Value%20*%3E%20%26valmap)%20%7B%0A%23ifndef%20NOINSTLOG%0A%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22CallInst%5Cn%22%3B%0A%23endif%0A%20%20%20%20auto%20*cinst%20%3D%20dyn_cast%3CCallInst%3E(arg)%3B%0A%20%20%20%20auto%20*calledFunc%20%3D%20cinst-%3EgetCalledFunction()%3B%0A%0A%20%20%20%20std%3A%3Avector%3CValue%20*%3E%20args%3B%0A%20%20%20%20for%20(auto%20%26v%20%3A%20cinst-%3Earg_operands())%20%7B%0A%20%20%20%20%20%20%20%20args.push_back(rewriteValue(v%2C%20valmap))%3B%0A%20%20%20%20%7D%0A%20%20%20%20CallInst%20*newinst%3B%0A%20%20%20%20if%20(calledFunc)%20%7B%0A%20%20%20%20%20%20%20%20newinst%20%3D%20CallInst%3A%3ACreate(funcmap%5BcalledFunc%5D%2C%20args)%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20newinst%20%3D%20CallInst%3A%3ACreate(rewriteValue(cinst-%3EgetCalledValue()%2C%20valmap)%2C%20args)%3B%0A%20%20%20%20%7D%0A%20%20%20%20newinst-%3EsetAttributes(cinst-%3EgetAttributes())%3B%0A%20%20%20%20newinst-%3EsetTailCallKind(cinst-%3EgetTailCallKind())%3B%0A%20%20%20%20newinst-%3EsetCallingConv(cinst-%3EgetCallingConv())%3B%0A%20%20%20%20return%20newinst%3B%0A%7D%3B%0A%0AValue%20*RenamePass%3A%3ArewriteCmpInst(Value%20*arg%2C%20std%3A%3Amap%3CValue%20*%2C%20Value%20*%3E%20%26valmap)%20%7B%0A%23ifndef%20NOINSTLOG%0A%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22CmpInst%5Cn%22%3B%0A%23endif%0A%20%20%20%20auto%20*cinst%20%3D%20dyn_cast%3CCmpInst%3E(arg)%3B%0A%20%20%20%20auto%20*newinst%20%3D%20CmpInst%3A%3ACreate(%0A%20%20%20%20%20%20%20%20%20%20%20%20cinst-%3EgetOpcode()%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20cinst-%3EgetPredicate()%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20rewriteValue(cinst-%3EgetOperand(0)%2C%20valmap)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20rewriteValue(cinst-%3EgetOperand(1)%2C%20valmap))%3B%0A%20%20%20%20return%20newinst%3B%0A%7D%3B%0A%0AValue%20*RenamePass%3A%3ArewriteGetElementPtrInst(Value%20*arg%2C%20std%3A%3Amap%3CValue%20*%2C%20Value%20*%3E%20%26valmap)%20%7B%0A%23ifndef%20NOINSTLOG%0A%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22GetElementPtrInst%5Cn%22%3B%0A%23endif%0A%20%20%20%20auto%20*gepinst%20%3D%20dyn_cast%3CGetElementPtrInst%3E(arg)%3B%0A%20%20%20%20std%3A%3Avector%3CValue%20*%3E%20idxList%3B%0A%20%20%20%20for%20(auto%20%26v%20%3A%20gepinst-%3Eindices())%20%7B%0A%20%20%20%20%20%20%20%20idxList.push_back(rewriteValue(v%2C%20valmap))%3B%0A%20%20%20%20%7D%0A%20%20%20%20auto%20*ptop%20%3D%20rewriteValue(gepinst-%3EgetPointerOperand()%2C%20valmap)%3B%0A%20%20%20%20auto%20*resultTy%20%3D%20rename(gepinst-%3EgetSourceElementType())%3B%0A%20%20%20%20auto%20*newinst%20%3D%20GetElementPtrInst%3A%3ACreate(%0A%20%20%20%20%20%20%20%20%20%20%20%20resultTy%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20ptop%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20idxList%0A%20%20%20%20)%3B%0A%20%20%20%20newinst-%3EsetIsInBounds(gepinst-%3EisInBounds())%3B%0A%20%20%20%20return%20newinst%3B%0A%7D%3B%0A%0AValue%20*RenamePass%3A%3ArewritePHINode(Value%20*arg%2C%20std%3A%3Amap%3CValue%20*%2C%20Value%20*%3E%20%26valmap)%20%7B%0A%23ifndef%20NOINSTLOG%0A%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22PHINode%5Cn%22%3B%0A%23endif%0A%20%20%20%20auto%20*phinode%20%3D%20dyn_cast%3CPHINode%3E(arg)%3B%0A%20%20%20%20%2F*%0A%20%20%20%20std%3A%3Avector%3CBasicBlock%20*%3E%20bbs%3B%0A%20%20%20%20std%3A%3Avector%3CValue%20*%3E%20values%3B%0A%20%20%20%20for%20(unsigned%20i%20%3D%200%3B%20i%20%3C%20phinode-%3EgetNumIncomingValues()%3B%20%2B%2Bi)%20%7B%0A%20%20%20%20%20%20%20%20bbs.push_back(dyn_cast%3CBasicBlock%3E(valmap%5Bphinode-%3EgetIncomingBlock(i)%5D))%3B%0A%20%20%20%20%20%20%20%20values.push_back(rewriteValue(phinode-%3EgetIncomingValue(i)%2C%20valmap))%3B%0A%20%20%20%20%7D*%2F%0A%20%20%20%20auto%20*newinst%20%3D%20PHINode%3A%3ACreate(%0A%20%20%20%20%20%20%20%20%20%20%20%20rename(phinode-%3EgetType())%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20phinode-%3EgetNumIncomingValues()%0A%20%20%20%20)%3B%0A%20%20%20%20%2F*%0A%20%20%20%20for%20(unsigned%20i%20%3D%200%3B%20i%20%3C%20phinode-%3EgetNumIncomingValues()%3B%20%2B%2Bi)%20%7B%0A%20%20%20%20%20%20%20%20newinst-%3EaddIncoming(values%5Bi%5D%2C%20bbs%5Bi%5D)%3B%0A%20%20%20%20%7D*%2F%0A%20%20%20%20return%20newinst%3B%0A%7D%3B%0A%0AValue%20*RenamePass%3A%3ArewriteReturnInst(Value%20*arg%2C%20std%3A%3Amap%3CValue%20*%2C%20Value%20*%3E%20%26valmap)%20%7B%0A%23ifndef%20NOINSTLOG%0A%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22ReturnInst%5Cn%22%3B%0A%23endif%0A%20%20%20%20auto%20*retinst%20%3D%20dyn_cast%3CReturnInst%3E(arg)%3B%0A%20%20%20%20auto%20*newinst%20%3D%20ReturnInst%3A%3ACreate(%0A%20%20%20%20%20%20%20%20%20%20%20%20theModule-%3EgetContext()%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20rewriteValue(retinst-%3EgetReturnValue()%2C%20valmap))%3B%0A%0A%20%20%20%20return%20newinst%3B%0A%7D%3B%0A%0AValue%20*RenamePass%3A%3ArewriteStoreInst(Value%20*arg%2C%20std%3A%3Amap%3CValue%20*%2C%20Value%20*%3E%20%26valmap)%20%7B%0A%23ifndef%20NOINSTLOG%0A%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22StoreInst%5Cn%22%3B%0A%23endif%0A%20%20%20%20auto%20*sinst%20%3D%20dyn_cast%3CStoreInst%3E(arg)%3B%0A%20%20%20%20auto%20*newinst%20%3D%20new%20StoreInst(%0A%20%20%20%20%20%20%20%20%20%20%20%20rewriteValue(sinst-%3EgetValueOperand()%2C%20valmap)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20rewriteValue(sinst-%3EgetPointerOperand()%2C%20valmap)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20sinst-%3EisVolatile()%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20sinst-%3EgetAlignment()%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20sinst-%3EgetOrdering()%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20sinst-%3EgetSyncScopeID()%0A%20%20%20%20)%3B%0A%20%20%20%20return%20newinst%3B%0A%7D%3B%0A%0AValue%20*RenamePass%3A%3ArewriteAllocaInst(Value%20*arg%2C%20std%3A%3Amap%3CValue%20*%2C%20Value%20*%3E%20%26valmap)%20%7B%0A%23ifndef%20NOINSTLOG%0A%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22AllocaInst%5Cn%22%3B%0A%23endif%0A%20%20%20%20auto%20ainst%20%3D%20dyn_cast%3CAllocaInst%3E(arg)%3B%0A%20%20%20%20auto%20*newinst%20%3D%20new%20AllocaInst(%0A%20%20%20%20%20%20%20%20%20%20%20%20rename(ainst-%3EgetType()-%3EgetElementType())%2C%0A%20%20%20%20%20%20%20%20%20%20%20%200%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20rewriteValue(ainst-%3EgetArraySize()%2C%20valmap)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20ainst-%3EgetAlignment())%3B%0A%20%20%20%20return%20newinst%3B%0A%7D%3B%0A%0AValue%20*RenamePass%3A%3ArewriteCastInst(Value%20*arg%2C%20std%3A%3Amap%3CValue%20*%2C%20Value%20*%3E%20%26valmap)%20%7B%0A%23ifndef%20NOINSTLOG%0A%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22CastInst%5Cn%22%3B%0A%23endif%0A%20%20%20%20auto%20*cinst%20%3D%20dyn_cast%3CCastInst%3E(arg)%3B%0A%20%20%20%20auto%20*newinst%20%3D%20CastInst%3A%3ACreate(%0A%20%20%20%20%20%20%20%20%20%20%20%20cinst-%3EgetOpcode()%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20rewriteValue(cinst-%3EgetOperand(0)%2C%20valmap)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20rename(cinst-%3EgetDestTy()))%3B%0A%20%20%20%20return%20newinst%3B%0A%7D%3B%0A%0AValue%20*RenamePass%3A%3ArewriteLoadInst(Value%20*arg%2C%20std%3A%3Amap%3CValue%20*%2C%20Value%20*%3E%20%26valmap)%20%7B%0A%23ifndef%20NOINSTLOG%0A%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22LoadInst%5Cn%22%3B%0A%23endif%0A%20%20%20%20auto%20linst%20%3D%20dyn_cast%3CLoadInst%3E(arg)%3B%0A%20%20%20%20auto%20*newinst%20%3D%20new%20LoadInst(%0A%20%20%20%20%20%20%20%20%20%20%20%20rename(linst-%3EgetType())%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20rewriteValue(linst-%3EgetPointerOperand()%2C%20valmap)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20linst-%3EisVolatile()%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20linst-%3EgetAlignment()%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20linst-%3EgetOrdering()%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20linst-%3EgetSyncScopeID()%0A%20%20%20%20)%3B%0A%20%20%20%20return%20newinst%3B%0A%7D%3B%0A%0AValue%20*RenamePass%3A%3ArewriteConstantExpr(Value%20*arg%2C%20std%3A%3Amap%3CValue%20*%2C%20Value%20*%3E%20%26valmap)%20%7B%0A%23ifndef%20NOINSTLOG%0A%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22ConstantExpr%5Cn%22%3B%0A%23endif%0A%20%20%20%20auto%20*cexpr%20%3D%20dyn_cast%3CConstantExpr%3E(arg)%3B%0A%20%20%20%20std%3A%3Avector%3CConstant%20*%3E%20oprewrite%3B%0A%0A%20%20%20%20for%20(unsigned%20i%20%3D%200%3B%20i%20%3C%20cexpr-%3EgetNumOperands()%3B%20%2B%2Bi)%20%7B%0A%20%20%20%20%20%20%20%20oprewrite.push_back(dyn_cast%3CConstant%3E(rewriteValue(cexpr-%3EgetOperand(i)%2C%20valmap)))%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20auto%20*ty%20%3D%20rename(cexpr-%3EgetType())%3B%0A%20%20%20%20if%20(cexpr-%3EisCast())%20%7B%0A%20%20%20%20%20%20%20%20if%20(oprewrite.size()%20!%3D%201)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22Cast%20has%20more%20than%20one%20op%3A%20%22%20%3C%3C%20*cexpr%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20exit(-1)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20auto%20*op%20%3D%20oprewrite%5B0%5D%3B%0A%20%20%20%20%20%20%20%20if%20(!op)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22Not%20a%20constant%3A%20%22%20%3C%3C%20*oprewrite%5B0%5D%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20ConstantExpr%3A%3AgetCast(cexpr-%3EgetOpcode()%2C%20op%2C%20ty)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20if%20(cexpr-%3EgetOpcode()%20%3E%3D%2011%20%26%26%20cexpr-%3EgetOpcode()%20%3C%3D%2028)%20%7B%0A%20%20%20%20%20%20%20%20if%20(oprewrite.size()%20!%3D%202)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22Binary%20operations%20don't%20have%202%20ops%3A%20%22%20%3C%3C%20*cexpr%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20exit(-1)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20auto%20*obo%20%3D%20dyn_cast%3COverflowingBinaryOperator%3E(cexpr)%3B%0A%20%20%20%20%20%20%20%20unsigned%20flag%20%3D%200%3B%0A%20%20%20%20%20%20%20%20if%20(obo)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20flag%20%7C%3D%20(obo-%3EhasNoUnsignedWrap()%20%3F%20OverflowingBinaryOperator%3A%3ANoUnsignedWrap%20%3A%200)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20flag%20%7C%3D%20(obo-%3EhasNoSignedWrap()%20%3F%20OverflowingBinaryOperator%3A%3ANoSignedWrap%20%3A%200)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20auto%20*pie%20%3D%20dyn_cast%3CPossiblyExactOperator%3E(cexpr)%3B%0A%20%20%20%20%20%20%20%20if%20(pie)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20flag%20%7C%3D%20(pie-%3EisExact()%20%3F%20PossiblyExactOperator%3A%3AIsExact%20%3A%200)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20ConstantExpr%3A%3Aget(cexpr-%3EgetOpcode()%2C%20oprewrite%5B0%5D%2C%20oprewrite%5B1%5D%2C%20flag)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20switch%20(cexpr-%3EgetOpcode())%20%7B%0A%20%20%20%20%20%20%20%20case%20Instruction%3A%3AGetElementPtr%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20auto%20*inst%20%3D%20dyn_cast%3CGetElementPtrInst%3E(cexpr-%3EgetAsInstruction())%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20auto%20*pty%20%3D%20rename(inst-%3EgetSourceElementType())%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20auto%20*constant%20%3D%20dyn_cast%3CConstant%3E(rewriteValue(inst-%3EgetPointerOperand()%2C%20valmap))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(!constant)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22Not%20a%20constant%20for%20gep%20constant%20op%3A%20%22%20%3C%3C%20*constant%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20exit(-1)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20std%3A%3Avector%3CConstant%20*%3E%20idxList%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20for%20(auto%20%26idx%20%3A%20inst-%3Eindices())%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20auto%20*t%20%3D%20dyn_cast%3CConstant%3E(rewriteValue(idx%2C%20valmap))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20(!t)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22Not%20a%20constant%20for%20idx%3A%20%22%20%3C%3C%20*t%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20exit(-1)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20idxList.push_back(t)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20bool%20isInBounds%20%3D%20inst-%3EisInBounds()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20ConstantExpr%3A%3AgetGetElementPtr(%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20pty%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20constant%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20idxList%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20isInBounds%0A%20%20%20%20%20%20%20%20%20%20%20%20)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20default%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22Unknown%20opcode%20%22%20%3C%3C%20cexpr-%3EgetOpcode()%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20exit(-1)%3B%0A%20%20%20%20%7D%0A%7D%3B%0A%0AValue%20*RenamePass%3A%3ArewriteGlobalObject(Value%20*arg%2C%20std%3A%3Amap%3CValue%20*%2C%20Value%20*%3E%20%26valmap)%20%7B%0A%23ifndef%20NOINSTLOG%0A%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22GlobalObject%5Cn%22%3B%0A%23endif%0A%20%20%20%20if%20(isa%3CFunction%3E(arg))%20%7B%0A%20%20%20%20%20%20%20%20return%20funcmap%5Bcast%3CFunction%3E(arg)%5D%3B%0A%20%20%20%20%7D%20else%20if%20(isa%3CGlobalVariable%3E(arg))%20%7B%0A%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20*arg%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%20%20%20%20return%20gvmap%5Bcast%3CGlobalVariable%3E(arg)%5D%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22butterfly%22%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%20%20%20%20exit(-1)%3B%0A%20%20%20%20%7D%0A%7D%3B%0A%0AValue%20*RenamePass%3A%3ArewriteConstantData(Value%20*arg%2C%20std%3A%3Amap%3CValue%20*%2C%20Value%20*%3E%20%26valmap)%20%7B%0A%23ifndef%20NOINSTLOG%0A%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22ConstantData%5Cn%22%3B%0A%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20*arg%20%3C%3C%20%22%5Cn%22%3B%0A%23endif%0A%20%20%20%20if%20(isa%3CConstantPointerNull%3E(arg))%20%7B%0A%20%20%20%20%20%20%20%20auto%20*cpn%20%3D%20cast%3CConstantPointerNull%3E(arg)%3B%0A%20%20%20%20%20%20%20%20auto%20*ty%20%3D%20dyn_cast%3CPointerType%3E(rename(cpn-%3EgetType()))%3B%0A%20%20%20%20%20%20%20%20return%20ConstantPointerNull%3A%3Aget(ty)%3B%0A%20%20%20%20%7D%20else%20if%20(isa%3CConstantAggregateZero%3E(arg))%20%7B%0A%20%20%20%20%20%20%20%20return%20ConstantAggregateZero%3A%3Aget(rename(arg-%3EgetType()))%3B%0A%20%20%20%20%7D%20else%20if%20(isa%3CConstantDataArray%3E(arg))%20%7B%0A%20%20%20%20%20%20%20%20auto%20*cda%20%3D%20cast%3CConstantDataArray%3E(arg)%3B%0A%20%20%20%20%20%20%20%20auto%20*elety%20%3D%20cda-%3EgetElementType()%3B%0A%20%20%20%20%20%20%20%20if%20(elety-%3EisFloatTy())%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20std%3A%3Avector%3Cfloat%3E%20vec%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20for%20(unsigned%20i%20%3D%200%3B%20i%20%3C%20cda-%3EgetNumElements()%3B%20%2B%2Bi)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20vec.push_back(cda-%3EgetElementAsFloat(i))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20ConstantDataArray%3A%3Aget(theModule-%3EgetContext()%2C%20vec)%3B%0A%20%20%20%20%20%20%20%20%7D%20else%20if%20(elety-%3EisDoubleTy())%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20std%3A%3Avector%3Cdouble%3E%20vec%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20for%20(unsigned%20i%20%3D%200%3B%20i%20%3C%20cda-%3EgetNumElements()%3B%20%2B%2Bi)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20vec.push_back(cda-%3EgetElementAsDouble(i))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20ConstantDataArray%3A%3Aget(theModule-%3EgetContext()%2C%20vec)%3B%0A%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20auto%20*intty%20%3D%20cast%3CIntegerType%3E(elety)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20switch%20(intty-%3EgetBitWidth())%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20case%208%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20std%3A%3Avector%3Cuint8_t%3E%20vec%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20for%20(unsigned%20i%20%3D%200%3B%20i%20%3C%20cda-%3EgetNumElements()%3B%20%2B%2Bi)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20vec.push_back((uint8_t)%20cda-%3EgetElementAsInteger(i))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20ConstantDataArray%3A%3Aget(theModule-%3EgetContext()%2C%20vec)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20case%2016%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20std%3A%3Avector%3Cuint16_t%3E%20vec%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20for%20(unsigned%20i%20%3D%200%3B%20i%20%3C%20cda-%3EgetNumElements()%3B%20%2B%2Bi)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20vec.push_back((uint16_t)%20cda-%3EgetElementAsInteger(i))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20ConstantDataArray%3A%3Aget(theModule-%3EgetContext()%2C%20vec)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20case%2032%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20std%3A%3Avector%3Cuint32_t%3E%20vec%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20for%20(unsigned%20i%20%3D%200%3B%20i%20%3C%20cda-%3EgetNumElements()%3B%20%2B%2Bi)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20vec.push_back((uint32_t)%20cda-%3EgetElementAsInteger(i))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20ConstantDataArray%3A%3Aget(theModule-%3EgetContext()%2C%20vec)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20case%2064%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20std%3A%3Avector%3Cuint64_t%3E%20vec%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20for%20(unsigned%20i%20%3D%200%3B%20i%20%3C%20cda-%3EgetNumElements()%3B%20%2B%2Bi)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20vec.push_back((uint64_t)%20cda-%3EgetElementAsInteger(i))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20ConstantDataArray%3A%3Aget(theModule-%3EgetContext()%2C%20vec)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20default%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22Unsupported%20bit%20width%3A%20%22%20%3C%3C%20intty-%3EgetBitWidth()%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20exit(-1)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%20else%20if%20(isa%3CConstantDataVector%3E(arg))%20%7B%0A%20%20%20%20%20%20%20%20auto%20*cda%20%3D%20cast%3CConstantDataVector%3E(arg)%3B%0A%20%20%20%20%20%20%20%20auto%20*elety%20%3D%20cda-%3EgetElementType()%3B%0A%20%20%20%20%20%20%20%20if%20(elety-%3EisFloatTy())%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20std%3A%3Avector%3Cfloat%3E%20vec%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20for%20(unsigned%20i%20%3D%200%3B%20i%20%3C%20cda-%3EgetNumElements()%3B%20%2B%2Bi)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20vec.push_back(cda-%3EgetElementAsFloat(i))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20ConstantDataVector%3A%3Aget(theModule-%3EgetContext()%2C%20vec)%3B%0A%20%20%20%20%20%20%20%20%7D%20else%20if%20(elety-%3EisDoubleTy())%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20std%3A%3Avector%3Cdouble%3E%20vec%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20for%20(unsigned%20i%20%3D%200%3B%20i%20%3C%20cda-%3EgetNumElements()%3B%20%2B%2Bi)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20vec.push_back(cda-%3EgetElementAsDouble(i))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20ConstantDataVector%3A%3Aget(theModule-%3EgetContext()%2C%20vec)%3B%0A%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20auto%20*intty%20%3D%20cast%3CIntegerType%3E(elety)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20switch%20(intty-%3EgetBitWidth())%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20case%208%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20std%3A%3Avector%3Cuint8_t%3E%20vec%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20for%20(unsigned%20i%20%3D%200%3B%20i%20%3C%20cda-%3EgetNumElements()%3B%20%2B%2Bi)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20vec.push_back((uint8_t)%20cda-%3EgetElementAsInteger(i))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20ConstantDataVector%3A%3Aget(theModule-%3EgetContext()%2C%20vec)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20case%2016%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20std%3A%3Avector%3Cuint16_t%3E%20vec%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20for%20(unsigned%20i%20%3D%200%3B%20i%20%3C%20cda-%3EgetNumElements()%3B%20%2B%2Bi)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20vec.push_back((uint16_t)%20cda-%3EgetElementAsInteger(i))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20ConstantDataVector%3A%3Aget(theModule-%3EgetContext()%2C%20vec)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20case%2032%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20std%3A%3Avector%3Cuint32_t%3E%20vec%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20for%20(unsigned%20i%20%3D%200%3B%20i%20%3C%20cda-%3EgetNumElements()%3B%20%2B%2Bi)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20vec.push_back((uint32_t)%20cda-%3EgetElementAsInteger(i))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20ConstantDataVector%3A%3Aget(theModule-%3EgetContext()%2C%20vec)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20case%2064%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20std%3A%3Avector%3Cuint64_t%3E%20vec%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20for%20(unsigned%20i%20%3D%200%3B%20i%20%3C%20cda-%3EgetNumElements()%3B%20%2B%2Bi)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20vec.push_back((uint64_t)%20cda-%3EgetElementAsInteger(i))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20ConstantDataVector%3A%3Aget(theModule-%3EgetContext()%2C%20vec)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20default%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22Unsupported%20bit%20width%3A%20%22%20%3C%3C%20intty-%3EgetBitWidth()%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20exit(-1)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%20else%20if%20(isa%3CUndefValue%3E(arg))%20%7B%0A%20%20%20%20%20%20%20%20return%20UndefValue%3A%3Aget(rename(arg-%3EgetType()))%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20return%20arg%3B%0A%20%20%20%20%7D%0A%7D%3B%0A%0AValue%20*RenamePass%3A%3ArewriteSwitchInst(Value%20*arg%2C%20std%3A%3Amap%3CValue%20*%2C%20Value%20*%3E%20%26valmap)%20%7B%0A%23ifndef%20NOINSTLOG%0A%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22Switch%5Cn%22%3B%0A%23endif%0A%20%20%20%20auto%20*sinst%20%3D%20dyn_cast%3CSwitchInst%3E(arg)%3B%0A%20%20%20%20auto%20*newinst%20%3D%20SwitchInst%3A%3ACreate(%0A%20%20%20%20%20%20%20%20%20%20%20%20rewriteValue(sinst-%3EgetCondition()%2C%20valmap)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20cast%3CBasicBlock%3E(valmap%5Bsinst-%3Ecase_default()-%3EgetCaseSuccessor()%5D)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20sinst-%3EgetNumCases())%3B%0A%20%20%20%20for%20(auto%20t%20%3D%20sinst-%3Ecase_begin()%3B%0A%20%20%20%20%20%20%20%20%20t%20!%3D%20sinst-%3Ecase_end()%3B%0A%20%20%20%20%20%20%20%20%20%2B%2Bt)%20%7B%0A%20%20%20%20%20%20%20%20newinst-%3EaddCase(t-%3EgetCaseValue()%2C%20cast%3CBasicBlock%3E(valmap%5Bt-%3EgetCaseSuccessor()%5D))%3B%0A%20%20%20%20%7D%0A%20%20%20%20return%20newinst%3B%0A%7D%0A%0AValue%20*RenamePass%3A%3ArewriteSelectInst(Value%20*arg%2C%20std%3A%3Amap%3CValue%20*%2C%20Value%20*%3E%20%26valmap)%20%7B%0A%23ifndef%20NOINSTLOG%0A%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22Select%5Cn%22%3B%0A%23endif%0A%20%20%20%20auto%20*sinst%20%3D%20dyn_cast%3CSelectInst%3E(arg)%3B%0A%20%20%20%20auto%20*newinst%20%3D%20SelectInst%3A%3ACreate(%0A%20%20%20%20%20%20%20%20%20%20%20%20rewriteValue(sinst-%3EgetCondition()%2C%20valmap)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20rewriteValue(sinst-%3EgetTrueValue()%2C%20valmap)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20rewriteValue(sinst-%3EgetFalseValue()%2C%20valmap)%0A%20%20%20%20)%3B%0A%20%20%20%20return%20newinst%3B%0A%7D%0A%0AValue%20*RenamePass%3A%3ArewriteConstantAggregate(Value%20*arg%2C%20std%3A%3Amap%3CValue%20*%2C%20Value%20*%3E%20%26valmap)%20%7B%0A%20%20%20%20std%3A%3Avector%3CConstant%20*%3E%20retvec%3B%0A%20%20%20%20for%20(auto%20%26t%20%3A%20dyn_cast%3CUser%3E(arg)-%3Eoperands())%20%7B%0A%20%20%20%20%20%20%20%20retvec.push_back(dyn_cast%3CConstant%3E(rewriteValue(dyn_cast%3CValue%3E(%26t)%2C%20valmap)))%3B%0A%20%20%20%20%7D%0A%20%20%20%20if%20(isa%3CConstantVector%3E(arg))%20%7B%0A%20%20%20%20%20%20%20%20return%20ConstantVector%3A%3Aget(retvec)%3B%0A%20%20%20%20%7D%20else%20if%20(isa%3CConstantArray%3E(arg))%20%7B%0A%20%20%20%20%20%20%20%20return%20ConstantArray%3A%3Aget(dyn_cast%3CArrayType%3E(rename(dyn_cast%3CConstantArray%3E(arg)-%3EgetType()))%2C%20retvec)%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20return%20ConstantStruct%3A%3Aget(dyn_cast%3CStructType%3E(rename(dyn_cast%3CConstantStruct%3E(arg)-%3EgetType()))%2C%20retvec)%3B%0A%20%20%20%20%7D%0A%7D%0A%0AValue%20*RenamePass%3A%3ArewriteShuffleVectorInst(Value%20*arg%2C%20std%3A%3Amap%3CValue%20*%2C%20Value%20*%3E%20%26valmap)%20%7B%0A%20%20%20%20auto%20*svi%20%3D%20dyn_cast%3CShuffleVectorInst%3E(arg)%3B%0A%20%20%20%20return%20new%20ShuffleVectorInst(%0A%20%20%20%20%20%20%20%20%20%20%20%20rewriteValue(svi-%3EgetOperand(0)%2C%20valmap)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20rewriteValue(svi-%3EgetOperand(1)%2C%20valmap)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20rewriteValue(svi-%3EgetMask()%2C%20valmap))%3B%0A%7D%0A%0AValue%20*RenamePass%3A%3ArewriteInsertElementInst(Value%20*arg%2C%20std%3A%3Amap%3CValue%20*%2C%20Value%20*%3E%20%26valmap)%20%7B%0A%20%20%20%20auto%20*iei%20%3D%20dyn_cast%3CInsertElementInst%3E(arg)%3B%0A%20%20%20%20return%20InsertElementInst%3A%3ACreate(%0A%20%20%20%20%20%20%20%20%20%20%20%20rewriteValue(iei-%3EgetOperand(0)%2C%20valmap)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20rewriteValue(iei-%3EgetOperand(1)%2C%20valmap)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20rewriteValue(iei-%3EgetOperand(2)%2C%20valmap)%0A%20%20%20%20)%3B%0A%7D%0A%0AValue%20*RenamePass%3A%3ArewriteExtractElementInst(Value%20*arg%2C%20std%3A%3Amap%3CValue%20*%2C%20Value%20*%3E%20%26valmap)%20%7B%0A%20%20%20%20auto%20*eei%20%3D%20dyn_cast%3CExtractElementInst%3E(arg)%3B%0A%20%20%20%20return%20ExtractElementInst%3A%3ACreate(%0A%20%20%20%20%20%20%20%20%20%20%20%20rewriteValue(eei-%3EgetVectorOperand()%2C%20valmap)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20rewriteValue(eei-%3EgetIndexOperand()%2C%20valmap)%0A%20%20%20%20)%3B%0A%7D%0A%0AValue%20*RenamePass%3A%3ArewriteValue(Value%20*arg%2C%20std%3A%3Amap%3CValue%20*%2C%20Value%20*%3E%20%26valmap)%20%7B%0A%23ifndef%20NOINSTLOG%0A%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22Value%5Cn%22%3B%0A%23endif%0A%20%20%20%20if%20(!arg)%0A%20%20%20%20%20%20%20%20return%20nullptr%3B%0A%20%20%20%20auto%20iter%20%3D%20valmap.find(arg)%3B%0A%20%20%20%20if%20(iter%20!%3D%20valmap.end())%20%7B%0A%20%20%20%20%20%20%20%20if%20(iter-%3Esecond)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22FOUND%5Ct%22%20%3C%3C%20*arg%20%3C%3C%20%22%5CtTO%5Ct%22%20%3C%3C%20*(iter-%3Esecond)%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20iter-%3Esecond%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%23ifndef%20NOINSTLOG%0A%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22REWRTING%5Ct%22%20%3C%3C%20*arg%20%3C%3C%20%22%5Cn%22%3B%0A%23endif%0A%20%20%20%20Value%20*ret%3B%0A%20%20%20%20if%20(isa%3CBinaryOperator%3E(arg))%20%7B%0A%20%20%20%20%20%20%20%20ret%20%3D%20rewriteBinaryOperator(arg%2C%20valmap)%3B%0A%20%20%20%20%7D%20else%20if%20(isa%3CBranchInst%3E(arg))%20%7B%0A%20%20%20%20%20%20%20%20ret%20%3D%20rewriteBranchInst(arg%2C%20valmap)%3B%0A%20%20%20%20%7D%20else%20if%20(isa%3CCallInst%3E(arg))%20%7B%0A%20%20%20%20%20%20%20%20ret%20%3D%20rewriteCallInst(arg%2C%20valmap)%3B%0A%20%20%20%20%7D%20else%20if%20(isa%3CCmpInst%3E(arg))%20%7B%0A%20%20%20%20%20%20%20%20ret%20%3D%20rewriteCmpInst(arg%2C%20valmap)%3B%0A%20%20%20%20%7D%20else%20if%20(isa%3CExtractElementInst%3E(arg))%20%7B%0A%20%20%20%20%20%20%20%20ret%20%3D%20rewriteExtractElementInst(arg%2C%20valmap)%3B%0A%20%20%20%20%7D%20else%20if%20(isa%3CGetElementPtrInst%3E(arg))%20%7B%0A%20%20%20%20%20%20%20%20ret%20%3D%20rewriteGetElementPtrInst(arg%2C%20valmap)%3B%0A%20%20%20%20%7D%20else%20if%20(isa%3CInsertElementInst%3E(arg))%20%7B%0A%20%20%20%20%20%20%20%20ret%20%3D%20rewriteInsertElementInst(arg%2C%20valmap)%3B%0A%20%20%20%20%7D%20else%20if%20(isa%3CPHINode%3E(arg))%20%7B%0A%20%20%20%20%20%20%20%20ret%20%3D%20rewritePHINode(arg%2C%20valmap)%3B%0A%20%20%20%20%7D%20else%20if%20(isa%3CStoreInst%3E(arg))%20%7B%0A%20%20%20%20%20%20%20%20ret%20%3D%20rewriteStoreInst(arg%2C%20valmap)%3B%0A%20%20%20%20%7D%20else%20if%20(isa%3CSwitchInst%3E(arg))%20%7B%0A%20%20%20%20%20%20%20%20ret%20%3D%20rewriteSwitchInst(arg%2C%20valmap)%3B%0A%20%20%20%20%7D%20else%20if%20(isa%3CSelectInst%3E(arg))%20%7B%0A%20%20%20%20%20%20%20%20ret%20%3D%20rewriteSelectInst(arg%2C%20valmap)%3B%0A%20%20%20%20%7D%20else%20if%20(isa%3CShuffleVectorInst%3E(arg))%20%7B%0A%20%20%20%20%20%20%20%20ret%20%3D%20rewriteShuffleVectorInst(arg%2C%20valmap)%3B%0A%20%20%20%20%7D%20else%20if%20(isa%3CReturnInst%3E(arg))%20%7B%0A%20%20%20%20%20%20%20%20ret%20%3D%20rewriteReturnInst(arg%2C%20valmap)%3B%0A%20%20%20%20%7D%20else%20if%20(isa%3CAllocaInst%3E(arg))%20%7B%0A%20%20%20%20%20%20%20%20ret%20%3D%20rewriteAllocaInst(arg%2C%20valmap)%3B%0A%20%20%20%20%7D%20else%20if%20(isa%3CCastInst%3E(arg))%20%7B%0A%20%20%20%20%20%20%20%20ret%20%3D%20rewriteCastInst(arg%2C%20valmap)%3B%0A%20%20%20%20%7D%20else%20if%20(isa%3CLoadInst%3E(arg))%20%7B%0A%20%20%20%20%20%20%20%20ret%20%3D%20rewriteLoadInst(arg%2C%20valmap)%3B%0A%20%20%20%20%7D%20else%20if%20(isa%3CUnreachableInst%3E(arg))%20%7B%0A%20%20%20%20%20%20%20%20ret%20%3D%20new%20UnreachableInst(theModule-%3EgetContext())%3B%0A%20%20%20%20%7D%20else%20if%20(isa%3CConstantData%3E(arg))%20%7B%0A%20%20%20%20%20%20%20%20ret%20%3D%20rewriteConstantData(arg%2C%20valmap)%3B%0A%20%20%20%20%7D%20else%20if%20(isa%3CConstantExpr%3E(arg))%20%7B%0A%20%20%20%20%20%20%20%20ret%20%3D%20rewriteConstantExpr(arg%2C%20valmap)%3B%0A%20%20%20%20%7D%20else%20if%20(isa%3CGlobalObject%3E(arg))%20%7B%0A%20%20%20%20%20%20%20%20ret%20%3D%20rewriteGlobalObject(arg%2C%20valmap)%3B%0A%20%20%20%20%7D%20else%20if%20(isa%3CConstantAggregate%3E(arg))%20%7B%0A%20%20%20%20%20%20%20%20ret%20%3D%20rewriteConstantAggregate(arg%2C%20valmap)%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22Unknown%5Cn%22%3B%0A%20%20%20%20%20%20%20%20if%20(isa%3COperator%3E(arg))%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22Is%20a%20operator%5Cn%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20dyn_cast%3COperator%3E(arg)-%3EgetOpcode()%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20if%20(dyn_cast%3CInstruction%3E(arg))%0A%20%20%20%20%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22Can%20cast%5Cn%22%3B%0A%20%20%20%20%20%20%20%20if%20(isa%3CConstantExpr%3E(arg))%0A%20%20%20%20%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22Can%20cast%20constant%5Cn%22%3B%0A%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22Unknown%20instr%20%22%20%3C%3C%20*arg%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%20%20%20%20exit(-1)%3B%0A%20%20%20%20%7D%0A%23ifndef%20NOINSTLOG%0A%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22REWROTE%5Ct%22%20%3C%3C%20*arg%20%3C%3C%20%22%5CtTO%5Ct%22%20%3C%3C%20*ret%20%3C%3C%20%22%5Cn%22%3B%0A%23endif%0A%20%20%20%20if%20(iter%20!%3D%20valmap.end())%20%7B%0A%20%20%20%20%20%20%20%20valmap%5Barg%5D%20%3D%20ret%3B%0A%20%20%20%20%7D%0A%20%20%20%20return%20ret%3B%0A%7D%0A%0Avoid%20RenamePass%3A%3ArewriteFunctions()%20%7B%0A%20%20%20%20for%20(auto%20%26p%20%3A%20funcmap)%20%7B%0A%20%20%20%20%20%20%20%20Function%20*orifn%20%3D%20p.first%3B%0A%20%20%20%20%20%20%20%20Function%20*newfn%20%3D%20p.second%3B%0A%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22Rewriting%5Ct%22%20%3C%3C%20orifn-%3EgetName()%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%20%20%20%20if%20(p.first-%3EisDeclaration())%0A%20%20%20%20%20%20%20%20%20%20%20%20continue%3B%0A%20%20%20%20%20%20%20%20std%3A%3Amap%3CValue%20*%2C%20Value%20*%3E%20valmap%3B%0A%20%20%20%20%20%20%20%20for%20(auto%20b1%20%3D%20orifn-%3Earg_begin()%2C%20b2%20%3D%20newfn-%3Earg_begin()%3B%20b1%20!%3D%20orifn-%3Earg_end()%3B%20%2B%2Bb1%2C%20%2B%2Bb2)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20valmap%5B%26*b1%5D%20%3D%20%26*b2%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20for%20(BasicBlock%20%26bb%20%3A%20*orifn)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20valmap%5B%26bb%5D%20%3D%20BasicBlock%3A%3ACreate(theModule-%3EgetContext()%2C%20%22%22)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20for%20(Instruction%20%26inst%20%3A%20bb)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20valmap%5B%26inst%5D%20%3D%20nullptr%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20for%20(BasicBlock%20%26bb%20%3A%20*orifn)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20valmap%5B%26bb%5D%20%3D%20BasicBlock%3A%3ACreate(theModule-%3EgetContext())%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20for%20(Instruction%20%26inst%20%3A%20bb)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22GO%20INTO%5Ct%22%20%3C%3C%20inst%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20rewriteValue(%26inst%2C%20valmap)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%0A%23ifndef%20NOINSTLOG%0A%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22Before%20rebuild%5Cn%22%3B%0A%23endif%0A%20%20%20%20%20%20%20%20%2F%2F%20rebuild%0A%20%20%20%20%20%20%20%20for%20(BasicBlock%20%26bb%20%3A%20*orifn)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20auto%20*newbb%20%3D%20dyn_cast%3CBasicBlock%3E(valmap%5B%26bb%5D)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20builder.SetInsertPoint(newbb)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20for%20(auto%20%26inst%20%3A%20bb)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20auto%20*newinst%20%3D%20dyn_cast%3CInstruction%3E(valmap%5B%26inst%5D)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20builder.Insert(newinst)%3B%0A%23ifndef%20NOINSTLOG%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20*valmap%5B%26inst%5D%20%3C%3C%20%22%5Cn%22%3B%0A%23endif%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20newbb-%3EgetInstList().push_back(newinst)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20newbb-%3EinsertInto(newfn)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%23ifndef%20NOINSTLOG%0A%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22After%20rebuild%5Cn%22%3B%0A%23endif%0A%0A%20%20%20%20%20%20%20%20%2F*%20relink%20BasicBlocks%20*%2F%0A%20%20%20%20%20%20%20%20%2F%2F%20Don't%20modify%2C%20it's%20magic....%0A%20%20%20%20%20%20%20%20%2F%2F%20very%20important%20to%20break%20the%20dependency%20loop%0A%20%20%20%20%20%20%20%20for%20(BasicBlock%20%26bb%20%3A%20*orifn)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20for%20(auto%20%26inst%20%3A%20bb)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20auto%20*br%20%3D%20dyn_cast%3CBranchInst%3E(%26inst)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20(br)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20auto%20*newbr%20%3D%20dyn_cast%3CBranchInst%3E(valmap%5Bbr%5D)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20(!newbr)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22Should%20be%20br%3A%20%22%20%3C%3C%20*newbr%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20exit(-1)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20for%20(unsigned%20i%20%3D%200%3B%20i%20%3C%20br-%3EgetNumSuccessors()%3B%20%2B%2Bi)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20newbr-%3EsetSuccessor(i%2C%20dyn_cast%3CBasicBlock%3E(valmap%5Bbr-%3EgetSuccessor(i)%5D))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20auto%20*phinode%20%3D%20dyn_cast%3CPHINode%3E(%26inst)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20(phinode)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20std%3A%3Avector%3CBasicBlock%20*%3E%20bbs%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20std%3A%3Avector%3CValue%20*%3E%20values%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20for%20(unsigned%20i%20%3D%200%3B%20i%20%3C%20phinode-%3EgetNumIncomingValues()%3B%20%2B%2Bi)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20bbs.push_back(dyn_cast%3CBasicBlock%3E(valmap%5Bphinode-%3EgetIncomingBlock(i)%5D))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20dyn_cast%3CBasicBlock%3E(valmap%5Bphinode-%3EgetIncomingBlock(i)%5D)%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20*(dyn_cast%3CBasicBlock%3E(valmap%5Bphinode-%3EgetIncomingBlock(i)%5D))%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20values.push_back(rewriteValue(phinode-%3EgetIncomingValue(i)%2C%20valmap))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20auto%20newinst%20%3D%20dyn_cast%3CPHINode%3E(valmap%5Bphinode%5D)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20for%20(unsigned%20i%20%3D%200%3B%20i%20%3C%20phinode-%3EgetNumIncomingValues()%3B%20%2B%2Bi)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20newinst-%3EaddIncoming(values%5Bi%5D%2C%20bbs%5Bi%5D)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20auto%20*switchinst%20%3D%20dyn_cast%3CSwitchInst%3E(%26inst)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20(switchinst)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20auto%20newinst%20%3D%20dyn_cast%3CSwitchInst%3E(valmap%5Bswitchinst%5D)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20newinst-%3EsetDefaultDest(dyn_cast%3CBasicBlock%3E(valmap%5Bswitchinst-%3EgetDefaultDest()%5D))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20for%20(auto%20t%20%3D%20switchinst-%3Ecase_begin()%2C%20n%20%3D%20newinst-%3Ecase_begin()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20t%20!%3D%20switchinst-%3Ecase_end()%20%26%26%20n%20!%3D%20newinst-%3Ecase_end()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2B%2Bt%2C%20%2B%2Bn)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20*(t-%3EgetCaseSuccessor())%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20*(valmap%5Bt-%3EgetCaseSuccessor()%5D)%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20n-%3EsetSuccessor(cast%3CBasicBlock%3E(valmap%5Bt-%3EgetCaseSuccessor()%5D))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20n-%3EsetValue(t-%3EgetCaseValue())%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20if%20(verifyFunction(*newfn%2C%20%26(llvm%3A%3Aerrs())))%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22FATAL!!!!!!%20failed%20to%20verify%5Cn%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20*orifn%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20*newfn%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20exit(-1)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%7D%0A%0Avoid%20RenamePass%3A%3ArewriteGlobalInitalizers()%20%7B%0A%20%20%20%20std%3A%3Amap%3CValue%20*%2C%20Value%20*%3E%20dummy%3B%0A%20%20%20%20for%20(auto%20%26gv%20%3A%20gvmap)%20%7B%0A%20%20%20%20%20%20%20%20auto%20*origv%20%3D%20gv.first%3B%0A%20%20%20%20%20%20%20%20auto%20*newgv%20%3D%20gv.second%3B%0A%20%20%20%20%20%20%20%20newgv-%3EcopyAttributesFrom(origv)%3B%0A%20%20%20%20%20%20%20%20if%20(origv-%3EhasInitializer())%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20if%20(newgv-%3EgetName().startswith(%22accmutv2%22))%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22stdfiles%20should%20not%20have%20an%20initializer%5Cn%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20exit(-1)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22REWRITE%20INIT%20FOR%5Ct%22%20%3C%3C%20*newgv%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22ORIGINAL%5Ct%22%20%3C%3C%20*(origv-%3EgetInitializer())%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22NEW%5Ct%22%20%3C%3C%20*rewriteValue(origv-%3EgetInitializer()%2C%20dummy)%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20newgv-%3EsetInitializer(dyn_cast%3CConstant%3E(rewriteValue(origv-%3EgetInitializer()%2C%20dummy)))%3B%0A%20%20%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22NO%20INIT%3A%20%22%20%3C%3C%20*origv%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22NO%20INIT(new)%3A%20%22%20%3C%3C%20*newgv%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%7D%0A%0Avoid%20RenamePass%3A%3ArenameBack()%20%7B%0A%20%20%20%20for%20(auto%20%26gv%20%3A%20gvmap)%20%7B%0A%20%20%20%20%20%20%20%20gv.first-%3EreplaceAllUsesWith(UndefValue%3A%3Aget(gv.first-%3EgetType()))%3B%0A%20%20%20%20%20%20%20%20gv.first-%3EremoveFromParent()%3B%0A%20%20%20%20%20%20%20%20if%20(gv.second-%3EgetName().startswith(%22__renamed__%22))%0A%20%20%20%20%20%20%20%20%20%20%20%20gv.second-%3EsetName(gv.first-%3EgetName())%3B%0A%20%20%20%20%20%20%20%20gv.first-%3EsetInitializer(nullptr)%3B%0A%20%20%20%20%20%20%20%20gv.first-%3EdropAllReferences()%3B%0A%20%20%20%20%7D%0A%20%20%20%20std%3A%3Aset%3Cstd%3A%3Astring%3E%20accmut_catched_func%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%22fclose%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22feof%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22fileno%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22fflush%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22ferror%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22fseek%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22ftell%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22fseeko%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22ftello%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22rewind%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22fread%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22fgets%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22fgetc%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22getc%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22ungetc%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22vfscanf%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22fscanf%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22scanf%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22fputc%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22vfprintf%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22fprintf%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22printf%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22perror%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22lseek%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22fopen%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22fputs%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22freopen%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22fputs%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22fwrite%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22open%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22creat%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22close%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22read%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%22write%22%0A%20%20%20%20%7D%3B%0A%0A%0A%23ifdef%20__APPLE__%0A%20%20%20%20std%3A%3Aset%3Cstd%3A%3Astring%3E%20accmut_catched_func_mac_alias%3B%0A%20%20%20%20for%20(auto%20%26s%20%3A%20accmut_catched_func)%20%7B%0A%20%20%20%20%20%20%20%20accmut_catched_func_mac_alias.insert(%22%5C01_%22%20%2B%20s)%3B%0A%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22%5C01_%22%20%2B%20s%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%7D%0A%23endif%0A%20%20%20%20for%20(auto%20%26f%20%3A%20funcmap)%20%7B%0A%20%20%20%20%20%20%20%20%2F%2F%20if%20(f.second-%3EgetName().startswith(%22__renamed__%22))%20%7B%0A%0A%20%20%20%20%20%20%20%20f.first-%3EreplaceAllUsesWith(UndefValue%3A%3Aget(f.first-%3EgetType()))%3B%0A%20%20%20%20%20%20%20%20f.first-%3EremoveFromParent()%3B%0A%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22RENAMING%5Ct%22%20%3C%3C%20f.second-%3EgetName()%3B%0A%20%20%20%20%20%20%20%20if%20(accmut_catched_func.find(f.first-%3EgetName())%20!%3D%20accmut_catched_func.end())%0A%20%20%20%20%20%20%20%20%20%20%20%20f.second-%3EsetName(%22__accmutv2__%22%20%2B%20f.first-%3EgetName())%3B%0A%23ifdef%20__APPLE__%0A%20%20%20%20%20%20%20%20else%20if%20(accmut_catched_func_mac_alias.find(f.first-%3EgetName())%20!%3D%20accmut_catched_func_mac_alias.end())%0A%20%20%20%20%20%20%20%20%20%20%20%20f.second-%3EsetName(%22__accmutv2__%22%20%2B%20f.first-%3EgetName().substr(2))%3B%0A%23endif%0A%20%20%20%20%20%20%20%20else%0A%20%20%20%20%20%20%20%20%20%20%20%20f.second-%3EsetName(f.first-%3EgetName())%3B%0A%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22%5CtTO%5Ct%22%20%3C%3C%20f.second-%3EgetName()%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%20%20%20%20f.first-%3EdropAllReferences()%3B%0A%20%20%20%20%20%20%20%20%2F*%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20llvm%3A%3Aerrs()%20%3C%3C%20%22Unknown%20function%20name%3F%22%20%3C%3C%20f.second-%3EgetName()%20%3C%3C%20%22%5Cn%22%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20exit(-1)%3B%0A%20%20%20%20%20%20%20%20%7D*%2F%0A%20%20%20%20%7D%0A%7D%0A%0Achar%20RenamePass%3A%3AID%20%3D%200%3B%0Astatic%20RegisterPass%3CRenamePass%3E%20X(%22AccMut-RenamePass%22%2C%20%22AccMut%20-%20Rename%20FILE%22)%3B
